{"version":3,"file":"index.js","sources":["../src/utilities/ensureIntegerOrNull.js","../src/utilities/extractPaginationLinks.js","../src/utilities/catchError.js","../src/utilities/extractHeaderMeta.js","../src/utilities/objectToURIParams.js","../src/mtgio.js"],"sourcesContent":["// NOTE\n// This function is only used to coerce a string number\n// into an integer or null if undefined or not a number\n// Don't use it for number operations (use Math functions)\n\nfunction ensureIntegerOrNull(num) {\n  let int = parseInt(num, 10);\n  if (isNaN(int)) int = null;\n  return int;\n}\n\nexport default ensureIntegerOrNull;\n","// Converts the strange formatted pagination\n// \"link\" strings to a consumable pojo\n\n/**\n * @param {String} str\n * @return {Object}\n */\nfunction extractPaginationLinks(str) {\n  const links = {};\n  if (typeof str === 'string' && str[0] === '<') {\n    str.split(',').forEach((link) => {\n      const extract = /<(.*)>; rel=\"(.*)\"/.exec(link);\n      if (extract && extract.length === 3) {\n        links[extract[2]] = extract[1];\n      }\n    });\n  }\n  return links;\n}\n\nexport default extractPaginationLinks;\n","function catchError(reason = {}) {\n  let {\n    status,\n    error,\n  } = reason;\n  if (typeof status === 'undefined') {\n    status = '500'; // string to be consistent with enpoint\n  }\n  if (typeof error === 'undefined') {\n    error = 'Internal Server Error';\n  }\n  if (error === 'not-found') {\n    status = '404'; // string to be consistent with enpoint\n    error = 'Not Found';\n  }\n  return Promise.reject({ status, error });\n}\nexport default catchError;\n","// Extracts the additional data the api\n// places in the header instead of the body\n\nimport ensureIntegerOrNull from './ensureIntegerOrNull';\nimport extractPaginationLinks from './extractPaginationLinks';\nimport catchError from './catchError';\n\n/**\n * @param {Promise} a fetch response (promise)\n * @param {Promise} a new promise resolved with an object containing { data, meta }\n */\nfunction extractHeaderMeta(response) {\n  return response.json().then((data) => {\n    if (data.error) {\n      return catchError(data);\n    }\n    return Promise.resolve(Object.assign(data, {\n      meta: {\n        links: extractPaginationLinks(response.headers.get('link')),\n        pageSize: ensureIntegerOrNull(response.headers.get('page-size')),\n        count: ensureIntegerOrNull(response.headers.get('count')),\n        totalCount: ensureIntegerOrNull(response.headers.get('total-count')),\n        ratelimitLimit: ensureIntegerOrNull(response.headers.get('ratelimit-limit')),\n        ratelimitRemaining: ensureIntegerOrNull(response.headers.get('ratelimit-remaining')),\n      },\n    }));\n  });\n}\n\nexport default extractHeaderMeta;\n","function objectToURIParams(obj, format) {\n  const p = Object.keys(obj).map(key => `${key}=${encodeURIComponent(obj[key])}`);\n  if (format === '?') {\n    return `?${p.join('&')}`;\n  }\n  return p;\n}\n\nexport default objectToURIParams;\n","import 'isomorphic-fetch';\nimport extractHeaderMeta from './utilities/extractHeaderMeta';\nimport objectToURIParams from './utilities/objectToURIParams';\nimport catchError from './utilities/catchError';\n\nconst ROOT_URI = 'https://api.magicthegathering.io/v1';\n\nexport const getRootURI = () => ROOT_URI;\n\n// only this utility is useful externally but not required\nexport const utilities = {\n  objectToURIParams,\n};\n\nconst RECOMMEND_GET_CARDS = `\nUse getCards({ id }) or getCards({ multiverseid }) instead:\nthat way you can use the same template logic expecing an array at all times.\ngetCards will contain a .cards array with one item.\n`;\n\nconst RECOMMEND_GET_SETS = `\nUse getSets({ code }) instead:\nthat way you can use the same template logic expecing an array at all times.\ngetSets will contain a .sets array with one item.\n`;\n\n// =====\n// CARDS\n// =====\n\nexport function getCardsURI(options = {}) {\n  let uri = `${ROOT_URI}/cards`;\n  if (typeof options === 'string') {\n    // NB: this is for pagination links\n    uri = options;\n  } else if (typeof options === 'object') {\n    const keysLength = Object.keys(options).length;\n    if (keysLength === 1 && (options.multiverseid || options.id)) {\n      uri = `${uri}/${(options.multiverseid || options.id)}`;\n    } else if (keysLength) {\n      uri = `${uri}${objectToURIParams(options, '?')}`;\n    }\n  }\n  return uri;\n}\n\nexport function getCards(options = {}) {\n  return fetch(getCardsURI(options))\n    .catch(catchError)\n    .then(extractHeaderMeta)\n    .then((result) => {\n      if (result.card) {\n        // for consistency also return a `cards` Array\n        // when a by `id` / `multiverseid` serach made\n        /* eslint-disable no-param-reassign */\n        result.cards = [Object.assign({}, result.card)];\n        result.card.DEPRECATED = RECOMMEND_GET_CARDS;\n        /* eslint-enable no-param-reassign */\n      }\n      return result;\n    });\n}\n\n// NOTE this exists only to be consistent with the remote api.\n//      RECOMMEND USE `getCards` INSTEAD\n\nexport function getCard(id) {\n  const options = {};\n  // determine if id is multiverseid format or id (hash)\n  if (!isNaN(id)) {\n    options.multiverseid = id;\n  } else {\n    options.id = id; // just asume a hash here\n  }\n  return fetch(getCardsURI(options))\n    .catch(catchError)\n    .then(extractHeaderMeta)\n    .then((result) => {\n      /* eslint-disable no-param-reassign */\n      result.NOTE = RECOMMEND_GET_CARDS;\n      /* eslint-enable no-param-reassign */\n      return result;\n    });\n}\n\n// ====\n// SETS\n// ====\n\nexport function getSetsURI(options = {}) {\n  let uri = `${ROOT_URI}/sets`;\n  const params = [];\n  if (options.name) {\n    params.push(`name=${encodeURIComponent(Array.isArray(options.name) ? options.name.join('|') : options.name)}`);\n  }\n  if (options.block) {\n    params.push(`block=${encodeURIComponent(Array.isArray(options.block) ? options.block.join('|') : options.block)}`);\n  }\n  if (params.length) {\n    uri = `${ROOT_URI}/sets?${params.join('&')}`;\n  }\n  if (typeof options.code === 'string') {\n    uri = `${ROOT_URI}/sets/${options.code}`;\n  }\n  return uri;\n}\n\nexport function getSets(options = {}) {\n  return fetch(getSetsURI(options))\n    .catch(catchError)\n    .then(extractHeaderMeta)\n    .then((result) => {\n      if (result.set) {\n        // for consistency also return a `sets` Array\n        // when a by `code` serach made\n        /* eslint-disable no-param-reassign */\n        result.sets = [Object.assign({}, result.set)];\n        result.set.DEPRECATED = RECOMMEND_GET_SETS;\n        /* eslint-enable no-param-reassign */\n      }\n      return result;\n    });\n}\n\n// NOTE this exists only to be consistent\n//      with the remote api.\n//      RECOMMEND USE `getSets({ code })` INSTEAD\n\nexport function getSet(code) {\n  return fetch(getSetsURI({ code }))\n    .catch(catchError)\n    .then(extractHeaderMeta)\n    .then((result) => {\n      /* eslint-disable no-param-reassign */\n      result.NOTE = RECOMMEND_GET_SETS;\n      /* eslint-enable no-param-reassign */\n      return result;\n    });\n}\n\n// =======\n// BOOSTER\n// =======\n\nexport const getBoosterURI = code => `${ROOT_URI}/sets/${code}/booster`;\n\nexport function getBooster(code) {\n  return fetch(getBoosterURI(code))\n    .catch(catchError)\n    .then(extractHeaderMeta);\n}\n\n// =====\n// TYPES\n// =====\n\nexport const getTypesURI = (type = 'types') => `${ROOT_URI}/${type}`;\n\nexport function getTypes(type = 'types') {\n  return fetch(getTypesURI(type))\n    .catch(catchError)\n    .then(extractHeaderMeta);\n}\n\n\n// =======\n// FORMATS\n// =======\n\nexport const getFormatsURI = () => `${ROOT_URI}/formats`;\n\nexport function getFormats() {\n  return fetch(getFormatsURI())\n    .catch(catchError)\n    .then(extractHeaderMeta);\n}\n"],"names":["ensureIntegerOrNull","num","int","parseInt","isNaN","extractPaginationLinks","str","links","split","forEach","link","extract","exec","length","catchError","reason","status","error","Promise","reject","extractHeaderMeta","response","json","then","data","resolve","Object","assign","headers","get","objectToURIParams","obj","format","p","keys","map","key","encodeURIComponent","join","ROOT_URI","getRootURI","utilities","RECOMMEND_GET_CARDS","RECOMMEND_GET_SETS","getCardsURI","options","uri","keysLength","multiverseid","id","getCards","fetch","catch","result","card","cards","DEPRECATED","getCard","NOTE","getSetsURI","params","name","push","Array","isArray","block","code","getSets","set","sets","getSet","getBoosterURI","getBooster","getTypesURI","type","getTypes","getFormatsURI","getFormats"],"mappings":"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"}